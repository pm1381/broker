apiVersion: apps/v1
kind: Deployment
metadata:
  name: envoy-deploy
spec:
  selector:
    matchLabels:
      app: envoy-pod
  template:
    metadata:
      labels:
        app: envoy-pod
    spec:
      containers:
        - name: envoy-proxy
          image: envoyproxy/envoy-dev:latest
          resources:
            requests:
              cpu: "100m"
              memory: "128Mi"
            limits:
              cpu: "200m"
              memory: "256Mi"
          args:
            - "--config-path"
            - "/etc/envoy/envoy.yaml"
            - "--log-level"
            - "debug"
          volumeMounts:
            - name: envoy-config-volume
              mountPath: /etc/envoy/
          ports:
            - containerPort: 10000
            - containerPort: 9901
      volumes:
        - name: envoy-config-volume
          configMap:
            name: envoy-config
# kubectl create configmap envoy-config --from-file=path/to/envoy.yaml
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: envoy-config
data:
  envoy.yaml: |
    admin:
      address:
        socket_address: { address: 0.0.0.0, port_value: 9901 }
    static_resources:
      listeners:
      - name: listener_0
        address:
          socket_address: { address: 0.0.0.0, port_value: 10000 }
        filter_chains:
        - filters:
          - name: envoy.http_connection_manager
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
              codec_type: auto
              stat_prefix: ingress_http
              route_config:
                name: local_route
                virtual_hosts:
                - name: local_service
                  domains: ["*"]
                  routes:
                  - match: { prefix: "/" }
                    route: { cluster: main_service }
              http_filters:
              - name: envoy.grpc_web
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.filters.http.grpc_web.v3.GrpcWeb
              - name: envoy.filters.http.local_ratelimit
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.filters.http.local_ratelimit.v3.LocalRateLimit
                  stat_prefix: http_local_rate_limiter
                  token_bucket:
                    max_tokens: 10000
                    tokens_per_fill: 10000
                    fill_interval: 1s
                  filter_enabled:
                    runtime_key: local_rate_limit_enabled
                    default_value:
                      numerator: 100
                      denominator: HUNDRED
                  filter_enforced:
                    runtime_key: local_rate_limit_enforced
                    default_value:
                      numerator: 100
                      denominator: HUNDRED
                  local_rate_limit_per_downstream_connection: false    
              - name: envoy.filters.http.router
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
      clusters:
      - name: main_service
        connect_timeout: 0.25s
        type: STRICT_DNS
        http2_protocol_options: {}
        lb_policy: ROUND_ROBIN
        load_assignment:
          cluster_name: echo_service
          endpoints:
            - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: broker-service
                      port_value: 50051
